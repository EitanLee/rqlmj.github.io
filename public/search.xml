<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTTP Node.js HTML CSS 小结</title>
    <url>/2019/11/09/%E9%98%B6%E6%AE%B5%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="回顾目前所学的知识点"><a href="#回顾目前所学的知识点" class="headerlink" title="回顾目前所学的知识点"></a>回顾目前所学的知识点</h2><h3 id="计算机是如何存储数据的"><a href="#计算机是如何存储数据的" class="headerlink" title="计算机是如何存储数据的"></a>计算机是如何存储数据的</h3><pre><code>计算机只能存0、1；二进制的数字
可以把十进制转成二进制，
有十进制就可以存字母了
ASCII ： 将字母转换为对应的数
中文就是用GBK国标扩等转换为十六进制
Unicode 将所有语言文字进行编码
UTF-8和unicode相比，为计算机进行了优化，节省空间</code></pre><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><pre><code>windows下尽量装C盘
git bash的安装遵守教程选择</code></pre><h3 id="命令行基础"><a href="#命令行基础" class="headerlink" title="命令行基础"></a>命令行基础</h3><pre><code>pwd     progress working dir  
cd      change dir
mkdir   make dir
touch 
echo &quot;hello&quot; &gt; 1.txt
echo &quot;hello&quot; &gt;&gt; 1.txt
echo &quot;hello&quot; &gt;! 1.txt
cp -r
rm -rf
mv 
tree    windows不支持
git init 
git add
git commit -m &quot;添加描述&quot;
git pull
git push 
git clone 

curl -L http://baidu.com
curl -s -v -- http://baidu.com  

ping qq.com 测网络延迟 发的是数据包，不需要加http

hexo init
hexo g
hexo server
hexo</code></pre><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><pre><code>写一个文件，交给计算机执行，就是脚本</code></pre><h3 id="HTTP-入门"><a href="#HTTP-入门" class="headerlink" title="HTTP 入门"></a>HTTP 入门</h3><pre><code>GET 请求

GET / HTTP/1.1              动词/路径/协议
Host: baidu.com             服务器
Accept: text/html           接受的东西

响应
HTTP/1.1 200 OK             
Content-Type：text/html; charset=utf-8    获取的内容类型
Content-Length:100000       字节长度

POST请求

POST /Login HTTP/1.1        
Host: baidu.com
Accept: application/json
Content-Type: application/x-www-form-urlencoded
Content-Length:10

username=xxxxxx&amp;password=xxxx  上传内容 

响应POST请求

HTTP/1.1 403 Forbidden
Content-Type: application/md-word
Content-Length: 200

比喻版请求与响应

工资请求

GET 11月工资 工资协议/1.1
Host: 百度公司
Accept: 现金, 支付宝转账, 银行汇款

工资响应

工资协议/1.1 200 OK
返回内容类型: 现金
现金张数: 10

浏览器调试工具——Network
点击view source
点击view source
点击view source

码：200 201 202 203 204
       301 302 303 304 305
       400 401 402 403 404
       500 501 502 503 504     </code></pre><h3 id="Node-js-Server"><a href="#Node-js-Server" class="headerlink" title="Node.js Server"></a>Node.js Server</h3><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><pre><code>写link 用 href
  script  src
  img     src
  iframe  src 
  a       href</code></pre><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><pre><code>1. float + clearfix
2. 高度是由什么决定的
     块元素和内联元素</code></pre>]]></content>
  </entry>
  <entry>
    <title>关于HTML</title>
    <url>/2019/11/05/%E5%85%B3%E4%BA%8EHTML/</url>
    <content><![CDATA[<h3> 什么是<a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91%E8%81%94%E7%9B%9F" target="_blank" rel="noopener">W3C</a></h3>
&ensp;&ensp;&ensp;&ensp;万维网联盟(W3C)是一个致力于改进网络的国际组织。它由来自各种相关IT行业的数百个成员组织组成。W3C为万维网(WWW)制定标准，以促进所有网络利益相关者之间的互操作性和合作。它是由WWW的创建者TimBerners-Lee于1994年建立的.
<br>
<h3><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">MDN</a></h3>
&ensp;&ensp;&ensp;&ensp;MDN Web Docs是开发人员的资源，由开发人员和技术作家社区维护，并在许多主题上托管许多文档，例如：HTML5，JavaScript，CSS，Web API，Node.js，WebExtensions和MathML。对于网站开发人员，MDN提供有关主题的文档，例如，构建HTML5移动应用程序，构建移动附加组件和位置感知应用程序。

<h4><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element" target="_blank" rel="noopener">HTML中所有标签列表</a></h4>

<h4>什么是空标签</h4>
&ensp;&ensp;&ensp;&ensp;一些元素只有一个标签，通常用来在此元素所在位置插入/嵌入一些东西。这种没有闭合的标签就是空标签，例如：元素
&lt;img&gt;是用来在元素&lt;img&gt;所在位置插入一张指定的图片。例子如下：<br>
&lt;img src="http://b-ssl.duitang.com/uploads/item/201505/17/20150517201136_GBWZM.jpeg"&gt;
<img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1572976666198&di=4394a9c35260c8b82f4a1bc61f151031&imgtype=0&src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201812%2F09%2F20181209113623_U4vVx.jpeg" alt="Koto no ha no niwa">
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">area</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">colgroup</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">command</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">embed</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">keygen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">track</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wbr</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4>什么是可替换标签</h4>
&ensp;&ensp;&ensp;&ensp;顾名思义就是会被替换的标签。比如一个典型的可替换元素 img：<br>

<img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1572976260678&di=f99cec0e0cd59f8722f0fa3fdeb6abdc&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20190728%2Fd1c058f244d84c9394bf464bcae74457.jpeg" alt="Weathering with you">

<p> img标签是浏览器去下载 src 属性给到的图片，并用该图片资源替换掉 img 标签，而且浏览器在下载前并不知道图片的宽高。所以，可替换元素比较特殊，它的宽高是由其加载的内容决定的。（当然 CSS 可以覆盖其样式）<br>典型的可替换元素有 &lt;iframe&gt; &lt;video&gt; &lt;embed&gt; &lt;img&gt; ，还有一些元素仅在特定情况下被作为可替换元素处理，比如 &lt;input&gt; </p>
]]></content>
  </entry>
  <entry>
    <title>几个重要的HTML标签</title>
    <url>/2019/11/05/%E5%87%A0%E4%B8%AA%E9%87%8D%E8%A6%81%E7%9A%84HTML%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h3 id="iframe标签"><a href="#iframe标签" class="headerlink" title="iframe标签"></a>iframe标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"xxx"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">frame</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>嵌套页面，其中src表示默认打开的页面，name属性通常指向一个a标签，用于指定需要打开的链接，frameborder属性是边框，一般设为0，表示无边框</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=&quot;&quot; name=&quot;xxx&quot; frameborder=&quot;0&quot;&gt;</span><br><span class="line">&lt;a href=&quot;http://qq.com&quot; target=&quot;_blank&quot;&gt;qq&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe" target="_blank" rel="noopener">iframe</a></p>
<a id="more"></a>
<h3 id="a标签"><a href="#a标签" class="headerlink" title="a标签"></a>a标签</h3><h5 id="a标签跳转页面（HTTP-GET）是get请求"><a href="#a标签跳转页面（HTTP-GET）是get请求" class="headerlink" title="a标签跳转页面（HTTP GET）是get请求"></a>a标签跳转页面（HTTP GET）是get请求</h5><p>href属性指定链接地址，//无协议地址，会继承页面的协议。<br>      href=”#” 表示回到顶部，href=”#sdsd” 当前页面内的跳转<br>    href=”javascript:” 伪协议，在a标签内执行js,<br>               href=”javascript:;” 表示点击a标签后不跳转，也就是什么也不做(href=””浏览器会默认刷新页面）<br>    href=”./index.html”   href中也可是文件路径/相对路径<br>     target属性指定打开链接的方式，有4个属性值。<br>        _blank 表示在新开页面打开链接<br>      _self 表示在自己所在的页面打开，当前处于一个iframe标签时，就在这个iframe内打开<br>      _parent 在父级页面中打开<br>      _top 在顶层页面中打开(target属性结合iframe标签更好理解）<br>     download属性表示下载href指定的东西，有一个属性值可以指定名称；download=”filename”</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">download</span>=<span class="string">"filename"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a" target="_blank" rel="noopener">a</a></p>
<h3 id="form标签"><a href="#form标签" class="headerlink" title="form标签"></a>form标签</h3><h5 id="HTTP-POST-form标签一般指定method为post，结合inpu标签使用（如果form标签下没有input按钮，就不会发送post请求）"><a href="#HTTP-POST-form标签一般指定method为post，结合inpu标签使用（如果form标签下没有input按钮，就不会发送post请求）" class="headerlink" title="(HTTP POST)form标签一般指定method为post，结合inpu标签使用（如果form标签下没有input按钮，就不会发送post请求）"></a>(HTTP POST)form标签一般指定method为post，结合inpu标签使用（如果form标签下没有input按钮，就不会发送post请求）</h5><p>form的method属性有post和get两个值，一般get用a标签，所以method属性值都是post</p>
<p>More info: <a href="https://https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form" target="_blank" rel="noopener">form</a></p>
<h3 id="input标签"><a href="#input标签" class="headerlink" title="input标签"></a>input标签</h3><h5 id="type属性指定input的类型，type-”submit”-则可以发送post请求，type-”button”-则不会发送post请求。但是当form表单里只有一个button标签的时候，注意是button标签，而且没有指定button标签的type属性值，则button标签会升级为提交按钮，也会发送post请求"><a href="#type属性指定input的类型，type-”submit”-则可以发送post请求，type-”button”-则不会发送post请求。但是当form表单里只有一个button标签的时候，注意是button标签，而且没有指定button标签的type属性值，则button标签会升级为提交按钮，也会发送post请求" class="headerlink" title="type属性指定input的类型，type=”submit” 则可以发送post请求，type=”button” 则不会发送post请求。但是当form表单里只有一个button标签的时候，注意是button标签，而且没有指定button标签的type属性值，则button标签会升级为提交按钮，也会发送post请求"></a>type属性指定input的类型，type=”submit” 则可以发送post请求，type=”button” 则不会发送post请求。但是当form表单里只有一个button标签的时候，注意是button标签，而且没有指定button标签的type属性值，则button标签会升级为提交按钮，也会发送post请求</h5><p>type=”checkbox” 则当前input标签是多选框<br>input标签和label标签合用时，例如</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>香蕉<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>#####则input标签可以勾选。type=”radio” 圆形框，只有name属性相同时才是单选</p>
<p>More info: <a href="https://https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input" target="_blank" rel="noopener">input</a></p>
<h3 id="select标签"><a href="#select标签" class="headerlink" title="select标签"></a>select标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"group"</span> <span class="attr">multiple</span>&gt;</span>下拉列表 select（选择，挑选);name属性指定列表名，在提交后会在浏览器的地址栏显示;multiple（多个的）属性让下拉列表可以多选</span><br><span class="line"> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>-<span class="tag">&lt;/<span class="name">option</span>&gt;</span> option标签指定列表项目</span><br><span class="line"> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span> <span class="attr">disabled</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span> disabled表示不可选</span><br><span class="line"> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span> <span class="attr">selected</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span> selected表示默认选中的</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="table标签"><a href="#table标签" class="headerlink" title="table标签"></a>table标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span>标签   border-collapse: collapse;消除列表内部单元格的边框</span><br><span class="line">	<span class="tag">&lt;<span class="name">theady</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th年龄</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">theady</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>16<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>小名<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>16<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tfoot</span>&gt;</span><span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>//表示表格中的项目，也就是每一行或者列的开头。<span class="tag">&lt;<span class="name">td</span>&gt;</span>表示一项下面的具体数据是什么</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">col</span> <span class="attr">width</span> = <span class="string">100</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">col</span> <span class="attr">bgcolor</span>=<span class="string">red</span> <span class="attr">width</span>=<span class="string">200</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">colgroup指定列表的单元格宽度和背景颜色</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>利用Hexo搭建github博客</title>
    <url>/2019/11/05/%E5%88%A9%E7%94%A8hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h3 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo?"></a>什么是<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>?</h3><p>Hexo是一个快速、简洁且高效的博客框架</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>安装git和node.js：下载<a href="https://git-scm.com/" target="_blank" rel="noopener">git</a>|<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a></p>
<p>安装完成后通过命令查看是否安装成功，显示版本号即为成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="启动git安装Hexo"><a href="#启动git安装Hexo" class="headerlink" title="启动git安装Hexo"></a>启动git安装Hexo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init myBlog</span><br><span class="line"><span class="built_in">cd</span> myBlog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>桌面右键点击git bash here，依次执行上面的代码，Hexo的本地仓库就建好了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g -s</span><br></pre></td></tr></table></figure>
<p>启动本地服务，然后在浏览器中输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 就可以预览效果了（Ctrl+C关闭本地服务）</p>
<h3 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h3><p>首先在 GitHub 上新建一个空的仓库，名称是「你的用户名.github.io」（注意个用户名是你的GitHub用户名，不是你的电脑用户名）</p>
<p>然后修改hexo的配置文件，进入myBlog/_config.yml/，打开_config.yml，在最下面修改deploy，如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:你的用户名.github.io.git</span><br><span class="line">  branch:master</span><br></pre></td></tr></table></figure>
<p>repo（仓库地址）可以直接从github复制,repo:后面有一个空格</p>
<p>部署git组件，将本地Hexo仓库推送到git</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>进入GitHub对应的仓库，在setting里打开 GitHub Pages 功能，如果已经打开了，就可以直接输入链接查看了</p>
<h3 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h3><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><p><a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">主题合集</a><br>随便找一个主题，进入主题的 GitHub 首页，比如我找的是<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a><br>复制它的 SSH 地址或 HTTPS 地址，假设地址为 <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:iissnan/hexo-theme-next.git</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes</span><br><span class="line">git <span class="built_in">clone</span> git@github.com:iissnan/hexo-theme-next.git</span><br><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure>
<p>将 _config.yml 的第 75 行改为 theme: hexo-theme-next，保存，然后将修改推送到github</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>刷新博客页面就能看到新的主题了</p>
<h4 id="修改博客页面"><a href="#修改博客页面" class="headerlink" title="修改博客页面"></a>修改博客页面</h4><p>打开myBlog/_config.yml</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">title: 你的博客名称</span><br><span class="line">subtitle: 博客简介</span><br><span class="line">description: sidebar的个人描述</span><br><span class="line">anchor:你的名字</span><br><span class="line">language:语言</span><br></pre></td></tr></table></figure>
<!-- more -->



]]></content>
  </entry>
</search>
